{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/communication.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","value","filter","onChange","handleFilter","PersonForm","onSubmit","handleAdd","newName","changeName","newNumber","changeNumber","type","Persons","persons","map","person","name","number","onClick","handleDelete","id","url","axios","get","newPerson","post","put","delete","Notification","success","message","className","App","count","useState","setPersons","setNewName","setNewNumber","setFilter","showAll","setShowAll","errorMessage","setErrorMessage","setSuccess","personsToShow","toLowerCase","startsWith","useEffect","PersonService","then","resp","data","length","e","target","preventDefault","a","find","elem","personToUpd","window","confirm","setTimeout","response","concat","per","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b71615ac.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter=(props)=>{\r\n    return(\r\n        <div>\r\n            filter shown with <input value={props.filter} onChange={props.handleFilter} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nconst PersonForm=(props)=>{\r\n    return (\r\n        <form onSubmit={props.handleAdd}>\r\n        <div>\r\n          name: <input value={props.newName} onChange={props.changeName} />\r\n          <div>number: <input value={props.newNumber} onChange={props.changeNumber}/></div>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    );\r\n}\r\nexport default PersonForm;","import React from 'react';\r\n\r\nconst Persons=(props)=>{\r\n    return(\r\n        <div>\r\n            {props.persons.map(person=><p key={person.id}>{person.name} {person.number}<button onClick={()=>props.handleDelete(person.name,person.id)}>delete</button></p>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Persons;","import axios from \"axios\";\r\n\r\nconst url ='/api/persons';\r\n\r\nconst getAll = () => {\r\n    return axios.get(url);\r\n}\r\n  \r\nconst create = newPerson => {\r\n    return axios.post(url, newPerson);\r\n}\r\n  \r\nconst update = (id, newPerson) => {\r\n    return axios.put(`${url}/${id}`, newPerson);\r\n}\r\n\r\nconst deletePerson=(id)=>{\r\n    return axios.delete(`${url}/${id}`);\r\n}\r\n  \r\nexport default {getAll,create,update,deletePerson}","const Notification = ({ success,message }) => {\r\n    if (message === null) {\r\n      return null;\r\n    }\r\n    if(success){\r\n        return (\r\n            <div className=\"success\">\r\n                {message}\r\n            </div>\r\n        );\r\n    }else{\r\n        return(\r\n            <div className=\"error\">\r\n                {message}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Notification;","import React, { useState ,useEffect} from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport PersonService from './services/communication';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]);\n  const [ newName, setNewName ] = useState('');\n  const [newNumber, setNewNumber]=useState('');\n  const [filter, setFilter]=useState('');\n  const [showAll,setShowAll]=useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [success,setSuccess]=useState(true);\n  const personsToShow = showAll?persons:persons.filter(person=>person.name.toLowerCase().startsWith(filter));\n  let count;\n  useEffect(()=>{\n    PersonService.getAll().then(resp=>{\n      setPersons(resp.data);\n      count=persons.length;\n    })\n  },[]);\n  const handleAdd=(e)=>{\n    e.preventDefault();\n    let a={name:newName,number:newNumber,id:count};\n    let found=persons.find(elem=>elem.name===newName);\n    if(found){\n      let personToUpd=persons.filter(elem=>elem.name===newName);\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n        PersonService.update(personToUpd[0].id,a).then(resp=>setPersons(persons.map(person => person.id !== personToUpd[0].id ? person : resp.data)));\n        setSuccess(true);\n        setErrorMessage(`updated ${newName}`);\n        setTimeout(() => {          \n          setErrorMessage(null)        \n        }, 5000)\n        setNewName('');\n        setNewNumber('');\n      }\n    }else{\n      PersonService.create(a)    \n      .then(response => {\n        setPersons(persons.concat(response.data));\n        count++;    \n      })\n      setSuccess(true);\n      setErrorMessage(`Added ${newName}`);        \n      setTimeout(() => {          \n        setErrorMessage(null)        \n      }, 5000)\n      setNewName('');\n      setNewNumber('');\n    }\n  };\n  const handleFilter=(e)=>{\n    setFilter(e.target.value);\n    setShowAll(false);\n  };\n  const changeName=(e)=>{\n    setNewName(e.target.value);\n  };\n  const changeNumber=(e)=>{\n    setNewNumber(e.target.value);\n  }\n  const handleDelete=(name,id)=>{\n    if(window.confirm(`delete ${name}?`)){\n      PersonService.deletePerson(id)\n      .then(resp=>{\n        setSuccess(true);\n        setErrorMessage(`deleted ${name}`);\n        setTimeout(() => {          \n          setErrorMessage(null);\n        }, 5000);\n        setPersons(persons.filter(per=>per.id!==id));\n        count--;\n      }).catch(error => {\n          setSuccess(false);\n          setErrorMessage(`Information of '${name}' has already been removed from server`);\n          setPersons(persons.filter(per=>per.id!==id));     \n          setTimeout(() => {          \n            setErrorMessage(null);\n          }, 5000);\n        });\n    }\n  }\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification success={success} message={errorMessage}/>\n      <Filter filter={filter} handleFilter={handleFilter}/>\n      <h3>Add a new</h3>\n      <PersonForm handleAdd={handleAdd} newName={newName} newNumber={newNumber} changeName={changeName} changeNumber={changeNumber}/>\n      <h3>Numbers</h3>\n      <Persons persons={personsToShow} handleDelete={handleDelete}/>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n\n"],"sourceRoot":""}